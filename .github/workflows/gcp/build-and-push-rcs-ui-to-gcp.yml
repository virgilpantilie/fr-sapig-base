name: build and push vanila remote consent ui image to google cloud registry
run-name: Building resource server:'${{ inputs.release_version_number }}' 

on:
  workflow_call:
    inputs:
      release_version_number:
        required: true
        type: string
      release_ref:
        required: true
        type: string
      java_version:
        required: false
        type: string
        default: '17'
      repository_url:
          required: true
          type: string
  
  workflow_dispatch:
    inputs:
      release_version_number:
        required: true
        type: string
      release_ref:
        required: true
        type: string
      java_version:
        required: false
        type: string
        default: '17'
      repository_url:
          required: true
          type: string
          default: 'SecureApiGateway/secure-api-gateway-ob-uk-ui'

env: 
  IMAGE_ARTIFACT_NAME: "secure-api-gateway-rcs-ui"  
          

jobs:
  
  build_image:
    name: Build and deploy container image
    runs-on: ubuntu-latest
    environment:
      name: development
    steps:

      # https://github.com/actions/checkout
      - name: checkout release tag
        uses: actions/checkout@v3
        with:
          repository: ${{ inputs.repository_url }}
          ref: ${{ inputs.release_ref }}
        
      - uses: 'google-github-actions/auth@v1.1.1'
        id: gcloud_auth
        with:
          credentials_json: ${{ secrets.GCR_CREDENTIALS_JSON }}

      - name: Set up Cloud SDK
        id: gcloud_sdk
        uses: 'google-github-actions/setup-gcloud@v1.1.1'

      - name: Set up docker auth
        id: gcloud_docker_auth
        run: |
          gcloud auth configure-docker europe-west4-docker.pkg.dev
    
      - name: Building and pushing Container Image
        run: |

          export GIT_SHA_SHORT=$(git rev-parse --short HEAD)
          cd secure-api-gateway-ob-uk-ui-rcs
          docker build -f projects/rcs/docker/Dockerfile -t ${{ secrets.GCP_REGISTRY }}/base/${{ env.IMAGE_ARTIFACT_NAME }}:${GIT_SHA_SHORT} .
          docker tag ${{ secrets.GCP_REGISTRY }}/base/${{ env.IMAGE_ARTIFACT_NAME }}:${GIT_SHA_SHORT} ${{ secrets.GCP_REGISTRY }}/base/${{ env.IMAGE_ARTIFACT_NAME }}:latest 
          docker push --all-tags ${{ secrets.GCP_REGISTRY }}/base/${{ env.IMAGE_ARTIFACT_NAME }}