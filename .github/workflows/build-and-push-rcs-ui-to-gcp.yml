name: build and push vanila remote consent ui image to google cloud registry
run-name: Building resource server:'${{ inputs.release_version_number }}' 

on:
  workflow_call:
    inputs:
      release_version_number:
        required: true
        type: string
      release_ref:
        required: true
        type: string
      java_version:
        required: false
        type: string
        default: '17'
      repository_url:
          required: true
          type: string
  
  workflow_dispatch:
    inputs:
      release_version_number:
        required: true
        type: string
      release_ref:
        required: true
        type: string
      java_version:
        required: false
        type: string
        default: '17'
      repository_url:
          required: true
          type: string
          default: 'SecureApiGateway/secure-api-gateway-ob-uk-ui'

env: 
  IMAGE_ARTIFACT_NAME: "secure-api-gateway-rcs-ui"  
          

jobs:
  
  build_image:
    name: Build and deploy container image
    runs-on: ubuntu-latest
    environment:
      name: development
    steps:

      # https://github.com/actions/checkout
      - name: checkout release tag
        uses: actions/checkout@v3
        with:
          repository: ${{ inputs.repository_url }}
          ref: ${{ inputs.release_ref }}

      - name: Prepare nodejs for build
        uses: actions/setup-node@v3
        with:
          node-version: 14
      # Java version and maven settings with protected repository id
        
      - name: Building node modules
        run: mvn clean install -DskipTests -DskipITs -s settings.xml 
          
      - name: Login to registry
        run: | 
          export AWS_ACCESS_KEY_ID=${{ secrets.ECR_CREDENTIALS_ACCESS_KEY }}
          export AWS_SECRET_ACCESS_KEY=${{ secrets.ECR_CREDENTIALS_SECRET_KEY }}
          aws ecr get-login-password --region eu-central-1 | docker login --username AWS --password-stdin ${{ secrets.ECR_REGISTRY }}
    
      - name: Building and pushing Container Image
        run: |

          export GIT_SHA_SHORT=$(git rev-parse --short HEAD)
          cd secure-api-gateway-ob-uk-rs-server # needs a variable?
          docker build -f docker/Dockerfile --build-arg JAR_FILE=$(find  -maxdepth 2 -regex .*\.jar) -t ${{ secrets.ECR_REGISTRY }}/forgerock/base/${{ env.IMAGE_ARTIFACT_NAME }}:${GIT_SHA_SHORT} .
          docker tag ${{ secrets.ECR_REGISTRY }}/forgerock/base/${{ env.IMAGE_ARTIFACT_NAME }}:${GIT_SHA_SHORT} ${{ secrets.ECR_REGISTRY }}/forgerock/base/${{ env.IMAGE_ARTIFACT_NAME }}:latest 
          docker push --all-tags ${{ secrets.ECR_REGISTRY }}/forgerock/base/${{ env.IMAGE_ARTIFACT_NAME }}